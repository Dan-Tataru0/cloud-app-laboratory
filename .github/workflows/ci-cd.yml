name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository_owner }}/cloud-app
  GKE_CLUSTER: cloud-app
  GKE_ZONE: europe-central2

jobs:
  # STAGE 1: BUILD
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          
      - name: Build with Gradle
        run: ./gradlew bootJar
        
      - name: Run unit tests
        run: ./gradlew test

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/cloud-app
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      # Save artifact for next jobs
      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: app-jar
          path: build/libs/*.jar
          retention-days: 1

  # STAGE 2: DEPLOY
  deploy:
    name: Deploy to GKE
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1.1.1
        
      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v1.0.1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          
      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=./kubeconfig
          
      - name: Update Kubernetes deployment
        run: |
          DOCKER_IMAGE=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/cloud-app:sha-${GITHUB_SHA::7}
          
          sed -i "s|\${DOCKER_IMAGE}|${DOCKER_IMAGE}|g" kubernetes/deployment.yaml
          
          # Apply configurations
          kubectl create namespace cloud-app --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/cloud-app -n cloud-app
          kubectl get services -n cloud-app